Release Notes:

1.8.2 -- 2018.10.19
* All: security update for Microsoft.AspNetCore.All

1.8.1 -- 2018.10.02
* Client: Added ZoneName to DropZoneConfig class.
* Client: Removed DropZone name as an argument from methods.  Facilitates filtering
*         of multiple sites with the same dropzone name.
* General: Update Dockerfile to use .NET Core 2.1 image base.

1.8.0 -- 2018.09.22
* Added UI shell for later work
* Added separate tokens for operational (AccessToken) and administrative (AdminToken) methods.
* Added middleware to ensure payload-too-large returns the standard 413 response code.
* Added an optional query parameter (expires) for SetReference.
* Added an optional query parameter (expires) to DropoffPayload.
* Added sort to the returned list of reference key names.
* Added Mvc route for home page without /Home path specified.
* Client: Added an optional expiraton parameter for a reference and a payload.
* Client: Added enumeration InvalidAuthentication to State in Result class for an auth failure specific (401) occurrence.
* Client: Corrected a problem with an instantiator (DropZoneConfig as argument) not working properly.

1.7.6 -- 2018.09.11
* (private -> public) Overload of instantiator with DropZoneConfig object parameter.

1.7.5 -- 2018.09.09
* Nuget package updates

1.7.4 -- 2018.09.09
* Add body size limit of 5Mb to Api calls for payload dropoff and set reference, and 1,024 for admin calls.
* Client: add DropZoneConfig class for configuration.
* Listening on both http and https ports now enabled.

1.7.3 -- 2018.08.29
* Refactor FailedAuthTokenWatch to ClientWatch, with simplier property structure.
* Remove 451 (Legal Reasons) return codes and use only 401 (Not Authorized) return codes.
  Separate return values provided a semaphore to attackers of when their attempts were being ignored or not.
  Now all attempts appear valid.
* Add overridable parameters for:
  ** Drop zone count
  ** Max failed attempts before lockout
  ** Lockout seconds of duration
* Created lockout logic that will return not authorized when a valid access token is provided during a lockout period.
  This can give the impression to brute force attackers that they still have not discovered the proper value.
* GetReference will now return a 204 response if the key does not exist.  Previously, it would have return a value of 
  empty string.

1.7.2 -- 2018.08.26
* Correct a path error for the api method Heartbeat

1.7.1 -- 2018.08.23
* Adds GetSecurity method for exposing client information.

1.7.0 -- 2018.07.31
* Security: Adds support for an optional access token in the client header.
* Adds 401 and 451 result codes for invalid access tokens.

1.6.1 -- 2018.07.10
* Add Clear method to remove only a dropzone

